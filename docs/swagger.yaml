basePath: /
definitions:
  api.TransferRequest:
    properties:
      amount:
        type: integer
      currency:
        type: string
      from_account_id:
        minimum: 1
        type: integer
      to_account_id:
        minimum: 1
        type: integer
    required:
    - amount
    - currency
    - from_account_id
    - to_account_id
    type: object
  api.UserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      password_changed_at:
        type: string
      username:
        type: string
    type: object
  api.createAccountRequest:
    properties:
      currency:
        type: string
    required:
    - currency
    type: object
  api.createUsertRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - email
    - full_name
    - password
    - username
    type: object
  api.errorResponse:
    properties:
      code:
        type: integer
      error:
        type: string
    type: object
  api.loginUserResponse:
    properties:
      access_token:
        type: string
      user:
        $ref: '#/definitions/api.UserResponse'
    type: object
  api.loginUsertRequest:
    properties:
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  db.Account:
    properties:
      balance:
        type: integer
      created_at:
        type: string
      currency:
        type: string
      id:
        type: integer
      owner:
        type: string
    type: object
  db.Entry:
    properties:
      account_id:
        type: integer
      amount:
        description: can be negative or positive
        type: integer
      created_at:
        type: string
      id:
        type: integer
    type: object
  db.Transfer:
    properties:
      amount:
        description: must be positive
        type: integer
      created_at:
        type: string
      from_account_id:
        type: integer
      id:
        type: integer
      to_account_id:
        type: integer
    type: object
  db.TransferTxResult:
    properties:
      from_account:
        $ref: '#/definitions/db.Account'
      from_entry:
        $ref: '#/definitions/db.Entry'
      to_account:
        $ref: '#/definitions/db.Account'
      to_entry:
        $ref: '#/definitions/db.Entry'
      transfer:
        $ref: '#/definitions/db.Transfer'
    type: object
  db.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      hashed_password:
        type: string
      password_changed_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a simple bank API.
  title: Simple Bank API
  version: "1.0"
paths:
  /accounts:
    get:
      consumes:
      - application/json
      description: List account
      operationId: list-account
      parameters:
      - description: Page ID
        in: query
        name: page_id
        type: integer
      - description: Page Size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Account'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: ListAccount
      tags:
      - Account
    post:
      consumes:
      - application/json
      description: Create new account
      operationId: create-account
      parameters:
      - description: currency
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/api.createAccountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateAccount
      tags:
      - Account
  /accounts/{id}:
    get:
      consumes:
      - application/json
      description: Get account
      operationId: get-account
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetAccount
      tags:
      - Account
  /transfers:
    post:
      consumes:
      - application/json
      description: Create new transfer
      operationId: create-transfer
      parameters:
      - description: Transfer info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/api.TransferRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.TransferTxResult'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateTransfer
      tags:
      - Transfer
  /users:
    post:
      consumes:
      - application/json
      description: Create new user
      operationId: create-user
      parameters:
      - description: user info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/api.createUsertRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: CreateUser
      tags:
      - Users
  /users/login:
    post:
      consumes:
      - application/json
      description: Login User
      operationId: login-user
      parameters:
      - description: login info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/api.loginUsertRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.loginUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: LoginUser
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
